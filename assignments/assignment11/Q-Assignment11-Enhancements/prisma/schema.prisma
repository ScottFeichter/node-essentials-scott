generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String
  hashedPassword String?
  googleId     String?  @unique
  roles        String?  @default("user")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  tasks        Task[]
  folders      Folder[]
  
  @@map("users")
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  completed   Boolean  @default(false)
  priority    String   @default("medium")
  userId      Int
  folderId    Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  folder      Folder?  @relation(fields: [folderId], references: [id])
  logs        TaskLog[]
  
  @@map("tasks")
}

model Folder {
  id        Int      @id @default(autoincrement())
  name      String
  color     String?  @default("#3b82f6")
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks     Task[]
  
  @@map("folders")
}

model TaskLog {
  id        Int      @id @default(autoincrement())
  message   String
  taskId    Int
  createdAt DateTime @default(now())
  
  task      Task     @relation(fields: [taskId], references: [id], onDelete: Cascade)
  
  @@map("task_logs")
}