# Assignment 5 - Introduction to Databases and SQL
# Each line is an SQL command for the specified tasks

# Task 1: Find the total price of each of the first 5 orders, as ordered by order_id
SELECT o.order_id, SUM(p.price * li.quantity) AS total_price 
FROM orders o 
JOIN line_items li ON o.order_id = li.order_id 
JOIN products p ON li.product_id = p.product_id 
GROUP BY o.order_id 
ORDER BY o.order_id 
LIMIT 5;

# Task 2: For each customer, find the average total price of their orders, ordered by customer name
SELECT c.customer_name, AVG(t.total_price) AS average_order_price 
FROM customers c 
JOIN (
    SELECT o.customer_id, o.order_id, SUM(p.price * li.quantity) AS total_price 
    FROM orders o 
    JOIN line_items li ON o.order_id = li.order_id 
    JOIN products p ON li.product_id = p.product_id 
    GROUP BY o.customer_id, o.order_id
) AS t ON c.customer_id = t.customer_id 
GROUP BY c.customer_id, c.customer_name 
ORDER BY c.customer_name;

# Task 3: Creating a new order for Perez and Sons

# Find customer_id for Perez and Sons
SELECT customer_id FROM customers WHERE customer_name = 'Perez and Sons';

# Find employee_id for Miranda Harris
SELECT employee_id FROM employees WHERE first_name = 'Miranda' AND last_name = 'Harris';

# Find the 5 least expensive products
SELECT product_id FROM products ORDER BY price ASC LIMIT 5;

# Begin transaction and create new order
BEGIN;

# Insert new order (using known IDs from above queries)
INSERT INTO orders (customer_id, employee_id, order_date) 
VALUES (
    (SELECT customer_id FROM customers WHERE customer_name = 'Perez and Sons'),
    (SELECT employee_id FROM employees WHERE first_name = 'Miranda' AND last_name = 'Harris'),
    '2024-01-15'
) RETURNING order_id;

# Insert 5 line items for the 5 least expensive products
INSERT INTO line_items (order_id, product_id, quantity) 
VALUES 
    ((SELECT MAX(order_id) FROM orders), (SELECT product_id FROM products ORDER BY price ASC LIMIT 1 OFFSET 0), 10),
    ((SELECT MAX(order_id) FROM orders), (SELECT product_id FROM products ORDER BY price ASC LIMIT 1 OFFSET 1), 10),
    ((SELECT MAX(order_id) FROM orders), (SELECT product_id FROM products ORDER BY price ASC LIMIT 1 OFFSET 2), 10),
    ((SELECT MAX(order_id) FROM orders), (SELECT product_id FROM products ORDER BY price ASC LIMIT 1 OFFSET 3), 10),
    ((SELECT MAX(order_id) FROM orders), (SELECT product_id FROM products ORDER BY price ASC LIMIT 1 OFFSET 4), 10);

# Commit transaction
COMMIT;

# Select all line_items for the new order
SELECT * FROM line_items WHERE order_id = (SELECT MAX(order_id) FROM orders);

# Task 4: Find all employees associated with more than 5 orders
SELECT e.first_name, e.last_name, COUNT(o.order_id) AS order_count 
FROM employees e 
JOIN orders o ON e.employee_id = o.employee_id 
GROUP BY e.employee_id, e.first_name, e.last_name 
HAVING COUNT(o.order_id) > 5 
ORDER BY MIN(e.last_name);